{"version":3,"sources":["components/searchbar/SearchBar.js","components/track/Track.js","components/tracklist/TrackList.js","components/searchresults/SearchResults.js","components/playlist/Playlist.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","_useState","useState","_useState2","_slicedToArray","song","setSong","_useState3","_useState4","artist","setArtist","_useState5","_useState6","album","setAlbum","React","createElement","className","onSubmit","event","preventDefault","alert","type","placeholder","value","onChange","_ref","target","_ref2","_ref3","Track","actionName","context","trackInfo","name","onClick","action","TrackList","trackComponents","tracks","map","track","key","id","SearchResults","results","addFunction","Playlist","saveButton","playlist","length","playlistName","disabled","title","saveFunction","setPlaylistName","removeFunction","App","genre","uri","searchResults","setSearchResults","setPlaylist","src","newSearchResults","trackToAdd","find","prevPlaylist","concat","_toConsumableArray","newName","trackToRemove","filter","trackURIs","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.04a9af9d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    const [song, setSong] = useState('');\n    const handleInputChangeSong = ({target}) => { setSong(target.value); };\n\n    const [artist, setArtist] = useState('');\n    const handleInputChangeArtist = ({target}) => { setArtist(target.value); };\n\n    const [album, setAlbum] = useState('');\n    const handleInputChangeAlbum = ({target}) => { setAlbum(target.value); };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        alert(\"Simulating a search\");\n        // props.setSearchResults([]);\n    }\n\n    return (\n        <div className=\"SearchBar\">\n            <form onSubmit={handleSubmit}>\n                <h2>Search for songs...</h2>\n                \n                <div>\n                    <input type=\"text\" placeholder=\"Song\" value={song} onChange={handleInputChangeSong} />\n                    <input type=\"text\" placeholder=\"Artist\" value={artist} onChange={handleInputChangeArtist} />\n                    <input type=\"text\" placeholder=\"Album\" value={album} onChange={handleInputChangeAlbum} />\n                </div>\n                \n                <button className=\"standard\" type=\"submit\">Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Track.css';\n\nfunction Track(props) {\n    let actionName;\n    if (props.context === 'playlist') {\n        actionName = '-';\n    } else {\n        actionName = '+';\n    }\n    const handleAction = () => props.action(props.trackInfo);\n    \n    return (\n        <li className=\"Track\">\n            <div className=\"TrackDetails\">\n                <div className=\"TrackTitle\">\n                    {props.trackInfo.name}\n                </div>\n                <div className=\"TrackSubtitle\">\n                    <span className=\"Artist\">{props.trackInfo.artist}</span>\n                    <span className=\"Album\">{props.trackInfo.album}</span>\n                </div>\n            </div>\n            <button className=\"subtle\" onClick={handleAction}>{actionName}</button>\n        </li>\n    );\n}\n\nexport default Track;","import React from 'react';\nimport Track from '../track/Track';\n\nimport './TrackList.css';\n\nfunction TrackList(props) {\n    let trackComponents = props.tracks.map((track) => {\n            return <Track key={track.id} context={props.context} trackInfo={track} action={props.action} />;\n        }\n    );\n    \n    return (\n        <ul className=\"TrackList\">\n            {trackComponents}\n        </ul>\n    );\n}\n\nexport default TrackList;","import React from 'react';\nimport TrackList from '../tracklist/TrackList';\n\nimport './SearchResults.css';\n\nfunction SearchResults(props) {\n    return (\n        <div className=\"SearchResults\">\n            <TrackList tracks={props.results} context=\"search\" action={props.addFunction} />\n        </div>\n    );\n}\n\nexport default SearchResults;","import React from 'react';\nimport TrackList from '../tracklist/TrackList';\n\nimport './Playlist.css';\n\nfunction Playlist(props) {\n    const inputPlaylistNameChange = ({target}) => { props.setPlaylistName(target.value); }\n    \n    let enableSaveButton = props.playlist.length !== 0 && props.playlistName;\n    let saveButton = enableSaveButton ? \n        (<button className=\"standard\" type=\"submit\">Save to Spotify</button>) :\n        (<button className=\"standard\" type=\"submit\" disabled=\"disabled\" title=\"Playlist needs a name and at least 1 song.\">Save to Spotify</button>);\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.saveFunction();\n    } \n\n    return (\n        <div className=\"Playlist\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Playlist Name\" value={props.playlistName} onChange={inputPlaylistNameChange} />\n                {saveButton}\n            </form>\n            <TrackList tracks={props.playlist} context=\"playlist\" action={props.removeFunction} />\n        </div>\n    );\n}\n\nexport default Playlist;","import React, { useState } from 'react';\n\nimport SearchBar from './components/searchbar/SearchBar';\nimport SearchResults from './components/searchresults/SearchResults';\nimport Playlist from './components/playlist/Playlist';\n\nimport './App.css';\n\nfunction App() {\n    const [searchResults, setSearchResults] = useState([\n        {\n            name: \"Superstition\",\n            artist: \"Stevie Wonder\",\n            album: \"Hotter Than July\",\n            genre: \"R&B\",\n            id: 1,\n            uri: 'uri1'\n        },\n        {\n            name: \"Higher Ground\",\n            artist: \"Stevie Wonder\",\n            album: \"Innervisions\",\n            genre: \"R&B\",\n            id: 2,\n            uri: 'uri2'\n        },\n        {\n            name: \"In the Stone\",\n            artist: \"Earth, Wind & Fire\",\n            album: \"I Am\",\n            genre: \"R&B\",\n            id: 3,\n            uri: 'uri3'\n        },\n        {\n            name: \"That's The Way of the World\",\n            artist: \"Earth, Wind & Fire\",\n            album: \"That's The Way of the World\",\n            genre: \"R&B\",\n            id: 4,\n            uri: 'uri4'\n        },\n        {\n            name: \"Click Bait (feat. The Hornheads)\",\n            artist: \"Cory Wong\",\n            album: \"The Striped Album\",\n            genre: \"R&B\",\n            id: 5,\n            uri: 'uri5'\n        },\n        {\n            name: \"Long Train Runnin'\",\n            artist: \"The Doobie Brothers\",\n            album: \"Live at the Wolf Trap\",\n            genre: \"Rock\",\n            id: 6,\n            uri: 'uri6'\n        },\n        {\n            name: \"The Chicken (Soul Intro)\",\n            artist: \"Jaco Pastorius\",\n            album: \"The Birthday Concert\",\n            genre: \"Jazz\",\n            id: 7,\n            uri: 'uri7'\n        }\n    ]);\n    const wrapperSetSearchResults = (newSearchResults) => { setSearchResults(newSearchResults); }\n\n    const [playlistName, setPlaylistName]= useState('');\n    const wrapperSetPlaylistName = (newName) => { setPlaylistName(newName); }\n\n    const [playlist, setPlaylist] = useState([]);\n    const addToPlaylist = (trackToAdd) => {\n        if (!playlist.find(track => track.id === trackToAdd.id)) {\n            setPlaylist((prevPlaylist) => {\n                return [...prevPlaylist, trackToAdd];\n            });\n        }\n    }\n    const removeFromPlaylist = (trackToRemove) => {\n        if (playlist.find(track => track.id === trackToRemove.id)) {\n            setPlaylist((prevPlaylist) => {\n                return prevPlaylist.filter(track => track.id !== trackToRemove.id);\n            });\n        }\n    }\n    const savePlaylistToSpotify = () => {\n        alert(\"Saving Playlist\");\n        let trackURIs = playlist.map(track => track.uri);\n        alert(trackURIs);\n        \n        setPlaylistName('');\n        setPlaylist([]);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Ja<span className=\"mmm\">mmm</span>ing</h1>\n                <h2>Spotify playlist creator using React</h2>\n            </header>\n            <div className=\"App-content-wrapper\">\n                <img className=\"App-content-background\" src=\"background.jpg\"/>\n                <div className=\"App-content\">\n                    <div className=\"App-content-section\">\n                        <SearchBar setSearchResults={wrapperSetSearchResults} />\n                        <SearchResults results={searchResults} addFunction={addToPlaylist} />\n                    </div>\n                    <div className=\"App-content-section\">\n                        <Playlist \n                            playlistName={playlistName} setPlaylistName={wrapperSetPlaylistName} \n                            playlist={playlist} removeFunction={removeFromPlaylist}\n                            saveFunction={savePlaylistToSpotify}\n                        />\n                    </div>\n                </div>\n            </div>\n           \n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}